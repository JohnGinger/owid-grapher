#! /usr/bin/env jest
import { TickFormattingOptions } from "@ourworldindata/types"
import { formatValue } from "./formatValue"

describe(formatValue, () => {
    // prettier-ignore
    const cases: [string, number, string, TickFormattingOptions][] = [
        ["default", 1, "1", {}],
        ["default negative", -1, "-1", {}],
        ["default small", 0.001, "<0.01", {}],
        ["default million specific", 1179766, "1.18 million", {}],
        ["default billion specific", 1234567890, "1.23 billion", {}],
        ["default 10 billion specific", 12345678901, "12.35 billion", {}],
        ["default billion with rounding", 1239999999, "1.24 billion", {}],
        ["default small", 0.0000000001, "<0.01", {}],
        ["thousand", 1000, "1,000", {}],
        ["thousand rounding", 1002, "1,002", {}],
        ["ten thousand", 10000, "10,000", {}],
        ["hundred thousand default", 100000, "100,000", {}],
        ["hundred thousand specific default", 123456, "123,456", {}],
        ["hundred thousand rounding default", 12388, "12,388", {}],
        ["hundred thousand specific decimals", 123456.789, "123,456.79", {}],
        ["million", 1000000, "1 million", {}],
        ["billion", 1000000000, "1 billion", {}],
        ["trillion", 1000000000000, "1 trillion", {}],
        ["quadrillion", 1000000000000000, "1 quadrillion", {}],
        ["negative million", -1000000, "-1 million", {}],
        ["negative billion", -1000000000, "-1 billion", {}],
        ["negative trillion", -1000000000000, "-1 trillion", {}],
        ["negative quadrillion", -1000000000000000, "-1 quadrillion", {}],
        ["1000 short prefix", 1000, "1k", { numberAbbreviation: "short" }],
        ["1499 short prefix", 1499, "1.5k", { numberAbbreviation: "short" }],
        ["1001 short prefix", 1001, "1k", { numberAbbreviation: "short" }],
        ["1009 short prefix", 1009, "1.01k", { numberAbbreviation: "short" }],
        ["12345 short prefix", 12345, "12.35k", { numberAbbreviation: "short" }],
        ["123456 short prefix", 123456, "123.46k", { numberAbbreviation: "short" }],
        ["123456 decimal short prefix", 98712.78901, "98.71k", { numberAbbreviation: "short", numDecimalPlaces: 10 }],
        ["hundred thousand short prefix decimal", 100000.44, "100k", { numberAbbreviation: "short" }],
        ["1000 long prefix", 1000, "1,000", { numberAbbreviation: "long" }],
        ["1499 long prefix", 1499, "1,499", { numberAbbreviation: "long" }],
        ["1001 long prefix", 1001, "1,001", { numberAbbreviation: "long" }],
        ["1009 long prefix", 1009, "1,009", { numberAbbreviation: "long" }],
        ["ten thousand long prefix", 10000, "10,000", { numberAbbreviation: "long" }],
        ["hundred thousand long prefix", 100000, "100,000", { numberAbbreviation: "long" }],
        ["hundred thousand long prefix decimal", 100000.44, "100,000.44", { numberAbbreviation: "long" }],
        ["million short prefix", 1000000, "1M", { numberAbbreviation: "short" }],
        ["billion short prefix", 1000000000, "1B", { numberAbbreviation: "short" }],
        ["trillion short prefix", 1000000000000, "1T", { numberAbbreviation: "short" }],
        ["quadrillion short prefix", 1000000000000000, "1quad", { numberAbbreviation: "short" }],
        ["2 decimals with integer", 1, "1", { numDecimalPlaces: 2 }],
        ["2 decimals with float", 1.123, "1.12", { numDecimalPlaces: 2 }],
        ["4 decimals with float", 1.123, "1.123", { numDecimalPlaces: 4 }],
        ["0 decimals with abbreviation", 1234567, "1.23 million", { numDecimalPlaces: 0, numberAbbreviation: "long" }],
        ["1 decimal with abbreviation", 1234567, "1.23 million", { numDecimalPlaces: 1, numberAbbreviation: "long" }],
        ["1 decimal with short abbreviation", 1234, "1.23k", { numDecimalPlaces: 1, numberAbbreviation: "short" }],
        ["2 decimal with percentage", 19.985, "19.98%", { numDecimalPlaces: 2, unit: "%" }],
        ["with unit", 1, "$1", { unit: "$" }],
        ["with custom unit", 1, "1pp", { unit: "pp", spaceBeforeUnit: false }],
        ["with custom unit and space", 1, "1 pp", { unit: "pp", spaceBeforeUnit: true }],
        ["negative with unit", -1, "-$1", { unit: "$" }],
        ["trailingZeroes true", 1.10, "1.1", { trailingZeroes: false }],
        ["trailingZeroes false", 1.10, "1.10", { trailingZeroes: true }],
        ["$ spaceBeforeUnit false", 1.1, "$1.1", { spaceBeforeUnit: false, unit: "$" }],
        ["$ spaceBeforeUnit true", 1.1, "$1.1", { spaceBeforeUnit: true, unit: "$" }],
        ["% spaceBeforeUnit true", 1.1, "1.1 %", { spaceBeforeUnit: true, unit: "%" }],
        ["% spaceBeforeUnit false", 1.1, "1.1%", { spaceBeforeUnit: false, unit: "%" }],
        ["% small", 0.1, "0.1%", { unit: "%" }],
        ["% very small", 0.001, "<0.01%", { unit: "%" }],
        ["$ very small", 0.001, "<$0.01", { unit: "$" }],
        ["%compound spaceBeforeUnit false", 1.1, "1.1%compound", { spaceBeforeUnit: false, unit: "%compound" }],
        ["numberAbbreviation long", 1000000000, "1 billion", { numberAbbreviation: "long" }],
        ["numberAbbreviation million specific", 846691846.8, "846.69 million", { numberAbbreviation: "long" }],
        ["numberAbbreviation billion specific", 123456789012, "123.46 billion", { numberAbbreviation: "long" }],
        ["numberAbbreviation long with unit", 1000000000, "$1 billion", { numberAbbreviation: "long", unit: "$" }],
        ["numberAbbreviation short", 1000000000, "1B", { numberAbbreviation: "short" }],
        ["numberAbbreviation %", 20000, "20,000%", { numberAbbreviation: "short", unit: "%" }],
        ["numberAbbreviation false", 1000000000, "1,000,000,000", { numberAbbreviation: false }],
        ["numberAbbreviation false very small", 0.000000001, "0.000000001", { numberAbbreviation: false, numDecimalPlaces: 10 }],
        ["showPlus true", 1, "+1", { showPlus: true }],
        ["showPlus false", 1, "1", { showPlus: false }],
        ["showPlus false with negative number", -1, "-1", { showPlus: false }],
        ["showPlus true with unit", 1, "+$1", { showPlus: true, unit: "$" }],
        ["showPlus true with % and 4 decimals", 1.23456, "+1.2346%", { showPlus: true, numDecimalPlaces: 4, unit: "%" }],
        ["showPlus false with $ and trailingZeroes false", 1234.5678, "$1,234.57", { showPlus: false, unit: "$", trailingZeroes: false }],
        ["showPlus false with $, trailingZeroes true, and spaceBeforeUnit true", 1234.5678, "$1,234.57", { showPlus: false, unit: "$", trailingZeroes: true, spaceBeforeUnit: true }],
        ["showPlus true with $, trailingZeroes true, and spaceBeforeUnit true", 1234.5678, "+$1,234.57", { showPlus: true, unit: "$", trailingZeroes: true, spaceBeforeUnit: true }],
    ]
    cases.forEach(([description, input, output, options]) => {
        it(description, () => {
            expect(formatValue(input, options)).toBe(output)
        })
    })
})
